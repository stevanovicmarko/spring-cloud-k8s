name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: stevanovicmarko/catalog-service
  VERSION: latest

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
    - name: Validate Kubernetes configuration
      uses: hermanbanken/kubeconform-action@v1
      with:
        args: "k8s/*.yml"

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'
    - name: Run tests
      run: |
        chmod +x mvnw
        ./mvnw --batch-mode --update-snapshots test

#    - name: Code vulnerability scanning
#      uses: anchore/scan-action@v3
#      id: scan
#      with:
#        path: "${{ github.workspace }}"
#        fail-build: false
#        severity-cutoff: "high"
#    - name: Inspect action SARIF report
#      run: cat ${{ steps.scan.outputs.sarif }}

#    - name: Upload vulnerability report
#      uses: github/codeql-action/upload-sarif@v2
#      if: success() || failure()
#      with:
#        sarif_file: ${{ steps.scan.outputs.sarif }}
#    - name: Build, unit and integration tests
#      run: |
#        chmod +x mvnw
#        ./mvnw --batch-mode --update-snapshots verify


  package:
    runs-on: ubuntu-latest
    name: Package and Publish
    if : github.ref == 'refs/heads/main'
    needs: [ test ]
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build container image
        run: |
          chmod +x mvnw
          ./mvnw --batch-mode --update-snapshots -DskipTests=true -Dmaven.javadoc.skip=true -B compile jib:build -Dimage=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: true
          severity-cutoff: "high"

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

